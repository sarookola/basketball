/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Controll;

import Comunicate.Server;
import DataBox.ControolPack;
import DataBox.SavePack;
import DataBox.Pack;
import DataBox.TimePack;

import java.awt.Color;
import java.io.File;
import javax.swing.JFileChooser;

/**
 *
 * @author shayan
 */
public class Controll extends javax.swing.JPanel implements ControllInterFace {

    /**
     * Creates new form Controll
     */
    private final Server server;
    SavePack savePack;
    ControolPack controolPack;
    BasKetballPlay basKetballPlay;
    BasketTeamName basketTeamName;
//    Display_Frame out[];
    TimerTimer timer;
    ControllCommandSet controllCommandSet;
    Jpaneldata1 jpaneldata;
//    LastONAirPack lastOnAir;
    String lastontrolDataFile = "seting\\lastControlData.json";

    boolean newsha, serverFree;

    public Controll(Server server) {
        newsha = false;
        this.server = server;
        controolPack = new FileManipulat().loadControlData(lastontrolDataFile, server.getobjecsArrayLenght(), server.getMaxname());
        controolPack.setVis_Anim_Bool(new ControolPack(server.getobjecsArrayLenght(), server.getMaxname()).getVis_Anim_Bool());
//        controolPack[0] = new KoshtiControolPack(out[0].getobjecsArrayLenght());
        controllCommandSet = new ControllCommandSet(server);
        controllCommandSet.setControolPack(controolPack);

        initComponents();
        basKetballPlay = new BasKetballPlay(this);
        basKetballPlay.setLoadeddata(controolPack);
        jPanelControl1.add(basKetballPlay);

        basketTeamName = new BasketTeamName(this);
        jTabbedPaneGame_intro.add(basketTeamName, "Team And Math Introduction");

        updateFromControlPAck();
        updateFromDatabase();
        newsha = true;
        serverFree = true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupHalfs = new javax.swing.ButtonGroup();
        toshakGroup = new javax.swing.ButtonGroup();
        jTabbedPaneGame_intro = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanelControl1 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jToggleButtontimerOnOff = new javax.swing.JToggleButton();
        jButton4 = new javax.swing.JButton();
        jButtonStartStop = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jButtonset24_24 = new javax.swing.JButton();
        jButtonStartStop24 = new javax.swing.JButton();
        jButtonset24_14 = new javax.swing.JButton();
        jPanelTimerOnOff = new javax.swing.JPanel();
        jPaneltimer = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel29 = new javax.swing.JPanel();
        jButton10 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jPanel30 = new javax.swing.JPanel();
        jSpinnerMinute = new javax.swing.JSpinner();
        jPaneltimerColor = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jSpinnerSecond = new javax.swing.JSpinner();
        jPanel34 = new javax.swing.JPanel();
        jButton8 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel31 = new javax.swing.JPanel();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jPanel32 = new javax.swing.JPanel();
        jPanelTimer24Color = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jTextFieldSecond24 = new javax.swing.JTextField();
        jPanel35 = new javax.swing.JPanel();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jPanelNotimer = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jPanel58 = new javax.swing.JPanel();
        jToggleButtonBeOrNot = new javax.swing.JToggleButton();
        jPanel61 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jPanel40 = new javax.swing.JPanel();

        setPreferredSize(new java.awt.Dimension(500, 500));
        setLayout(new java.awt.GridLayout(1, 0));

        jPanel1.setPreferredSize(new java.awt.Dimension(0, 0));
        jPanel1.setLayout(new java.awt.GridLayout(0, 1));

        jPanelControl1.setLayout(new java.awt.BorderLayout());
        jPanel1.add(jPanelControl1);

        jPanel12.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel12.setPreferredSize(new java.awt.Dimension(250, 250));
        jPanel12.setLayout(new java.awt.GridLayout(0, 1));

        jPanel17.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel17.setPreferredSize(new java.awt.Dimension(0, 0));
        jPanel17.setLayout(new java.awt.GridLayout(1, 0));

        jPanel16.setLayout(new java.awt.GridLayout(0, 1));

        jPanel6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel6.setLayout(new java.awt.BorderLayout());

        jPanel4.setLayout(new java.awt.GridLayout(1, 0));

        jToggleButtontimerOnOff.setText("Timer Off");
        jToggleButtontimerOnOff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtontimerOnOffActionPerformed(evt);
            }
        });
        jPanel4.add(jToggleButtontimerOnOff);

        jButton4.setText("set to 10");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton4);

        jPanel6.add(jPanel4, java.awt.BorderLayout.NORTH);

        jButtonStartStop.setText("Start");
        jButtonStartStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStartStopActionPerformed(evt);
            }
        });
        jPanel6.add(jButtonStartStop, java.awt.BorderLayout.CENTER);

        jPanel16.add(jPanel6);

        jPanel7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel7.setLayout(new java.awt.BorderLayout());

        jButtonset24_24.setText("24");
        jButtonset24_24.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButtonset24_24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonset24_24ActionPerformed(evt);
            }
        });
        jPanel7.add(jButtonset24_24, java.awt.BorderLayout.EAST);

        jButtonStartStop24.setText("Start");
        jButtonStartStop24.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButtonStartStop24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStartStop24ActionPerformed(evt);
            }
        });
        jPanel7.add(jButtonStartStop24, java.awt.BorderLayout.CENTER);

        jButtonset24_14.setText("14");
        jButtonset24_14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonset24_14ActionPerformed(evt);
            }
        });
        jPanel7.add(jButtonset24_14, java.awt.BorderLayout.WEST);

        jPanel16.add(jPanel7);

        jPanel17.add(jPanel16);

        jPanelTimerOnOff.setLayout(new java.awt.CardLayout());

        jPaneltimer.setLayout(new java.awt.GridLayout(0, 1));

        jPanel2.setLayout(new java.awt.GridLayout(0, 1));

        jPanel29.setLayout(new java.awt.GridLayout(1, 0));

        jButton10.setText("-10");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel29.add(jButton10);

        jButton9.setText("+10");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel29.add(jButton9);

        jPanel2.add(jPanel29);

        jPanel30.setLayout(new java.awt.GridLayout(1, 0));

        jSpinnerMinute.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(3), null, null, Integer.valueOf(1)));
        jSpinnerMinute.setValue(10);
        jPanel30.add(jSpinnerMinute);

        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("زمان بازی");

        javax.swing.GroupLayout jPaneltimerColorLayout = new javax.swing.GroupLayout(jPaneltimerColor);
        jPaneltimerColor.setLayout(jPaneltimerColorLayout);
        jPaneltimerColorLayout.setHorizontalGroup(
            jPaneltimerColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPaneltimerColorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPaneltimerColorLayout.setVerticalGroup(
            jPaneltimerColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPaneltimerColorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel30.add(jPaneltimerColor);
        jPanel30.add(jSpinnerSecond);

        jPanel2.add(jPanel30);

        jPanel34.setLayout(new java.awt.GridLayout(1, 0));

        jButton8.setText("-۱");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel34.add(jButton8);

        jButton7.setText("+۱");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel34.add(jButton7);

        jPanel2.add(jPanel34);

        jPaneltimer.add(jPanel2);

        jPanel3.setLayout(new java.awt.GridLayout(0, 1));

        jPanel31.setLayout(new java.awt.GridLayout(1, 0));

        jButton12.setText("-10");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jPanel31.add(jButton12);

        jButton13.setText("+10");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jPanel31.add(jButton13);

        jPanel3.add(jPanel31);

        jPanel32.setLayout(new java.awt.GridLayout(1, 0));

        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("24 ثانیه");

        javax.swing.GroupLayout jPanelTimer24ColorLayout = new javax.swing.GroupLayout(jPanelTimer24Color);
        jPanelTimer24Color.setLayout(jPanelTimer24ColorLayout);
        jPanelTimer24ColorLayout.setHorizontalGroup(
            jPanelTimer24ColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTimer24ColorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelTimer24ColorLayout.setVerticalGroup(
            jPanelTimer24ColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTimer24ColorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel24)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel32.add(jPanelTimer24Color);

        jTextFieldSecond24.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextFieldSecond24.setText("24");
        jPanel32.add(jTextFieldSecond24);

        jPanel3.add(jPanel32);

        jPanel35.setLayout(new java.awt.GridLayout(1, 0));

        jButton14.setText("-۱");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jPanel35.add(jButton14);

        jButton15.setText("+۱");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jPanel35.add(jButton15);

        jPanel3.add(jPanel35);

        jPaneltimer.add(jPanel3);

        jPanelTimerOnOff.add(jPaneltimer, "card2");

        jPanelNotimer.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButton1.setText("picOnTimer");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelNotimerLayout = new javax.swing.GroupLayout(jPanelNotimer);
        jPanelNotimer.setLayout(jPanelNotimerLayout);
        jPanelNotimerLayout.setHorizontalGroup(
            jPanelNotimerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelNotimerLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelNotimerLayout.setVerticalGroup(
            jPanelNotimerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelNotimerLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jButton1)
                .addContainerGap(200, Short.MAX_VALUE))
        );

        jPanelTimerOnOff.add(jPanelNotimer, "card3");

        jPanel17.add(jPanelTimerOnOff);

        jPanel15.setLayout(new java.awt.GridLayout(0, 1));

        jPanel58.setLayout(new java.awt.GridLayout(1, 0));

        jToggleButtonBeOrNot.setText("نمایش تصویر  خروجی");
        jToggleButtonBeOrNot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonBeOrNotActionPerformed(evt);
            }
        });
        jPanel58.add(jToggleButtonBeOrNot);

        jPanel15.add(jPanel58);

        jPanel61.setLayout(new java.awt.GridLayout(1, 0));

        jButton6.setText("ریست کلی");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel61.add(jButton6);

        jPanel15.add(jPanel61);

        javax.swing.GroupLayout jPanel40Layout = new javax.swing.GroupLayout(jPanel40);
        jPanel40.setLayout(jPanel40Layout);
        jPanel40Layout.setHorizontalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 241, Short.MAX_VALUE)
        );
        jPanel40Layout.setVerticalGroup(
            jPanel40Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 84, Short.MAX_VALUE)
        );

        jPanel15.add(jPanel40);

        jPanel17.add(jPanel15);

        jPanel12.add(jPanel17);

        jPanel1.add(jPanel12);

        jTabbedPaneGame_intro.addTab("Main", jPanel1);

        add(jTabbedPaneGame_intro);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:

        //        jComboBox1.setSelectedIndex(0);
        // resetAllKOshti();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jToggleButtonBeOrNotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonBeOrNotActionPerformed
        // TODO add your handling code here:
        if (jToggleButtonBeOrNot.isSelected()) {
//            resetAllKOshti();
            controolPack.setFrameVis(true);

            jToggleButtonBeOrNot.setText("خروجی روی پرده");
            jToggleButtonBeOrNot.setForeground(Color.red);
        } else {
            controolPack.setFrameVis(false);
            jToggleButtonBeOrNot.setText("نمایش تصویر خروجی");
            jToggleButtonBeOrNot.setForeground(Color.blue);
        }
        updateControlpack();

    }//GEN-LAST:event_jToggleButtonBeOrNotActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        timer.changetimer(+1);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        timer.changetimer(-1);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        timer.changetimer(+10);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        timer.changetimer(-10);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButtonStartStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStartStopActionPerformed
        // TODO add your handling code here:
        startStopTimer();
    }//GEN-LAST:event_jButtonStartStopActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        resetTimer();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButtonset24_24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonset24_24ActionPerformed
        // TODO add your handling code here:
        resetTimer24(24);
    }//GEN-LAST:event_jButtonset24_24ActionPerformed

    private void jButtonStartStop24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStartStop24ActionPerformed
        // TODO add your handling code here:
        startStop24();
    }//GEN-LAST:event_jButtonStartStop24ActionPerformed

    private void jButtonset24_14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonset24_14ActionPerformed
        // TODO add your handling code here:
        resetTimer24(14);
    }//GEN-LAST:event_jButtonset24_14ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jToggleButtontimerOnOffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtontimerOnOffActionPerformed
        // TODO add your handling code here:
        timerOnOff();
    }//GEN-LAST:event_jToggleButtontimerOnOffActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        getTimerCoverPic();
    }//GEN-LAST:event_jButton1ActionPerformed
    private void SendControolPack() {
        if (serverFree) {
            serverFree = false;
            server.writeSocket(new Pack(1, controolPack));
            serverFree = true;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupHalfs;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JButton jButtonStartStop;
    private javax.swing.JButton jButtonStartStop24;
    private javax.swing.JButton jButtonset24_14;
    private javax.swing.JButton jButtonset24_24;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel40;
    private javax.swing.JPanel jPanel58;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel61;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanelControl1;
    private javax.swing.JPanel jPanelNotimer;
    private javax.swing.JPanel jPanelTimer24Color;
    private javax.swing.JPanel jPanelTimerOnOff;
    private javax.swing.JPanel jPaneltimer;
    private javax.swing.JPanel jPaneltimerColor;
    private javax.swing.JSpinner jSpinnerMinute;
    private javax.swing.JSpinner jSpinnerSecond;
    private javax.swing.JTabbedPane jTabbedPaneGame_intro;
    private javax.swing.JTextField jTextFieldSecond24;
    private javax.swing.JToggleButton jToggleButtonBeOrNot;
    private javax.swing.JToggleButton jToggleButtontimerOnOff;
    private javax.swing.ButtonGroup toshakGroup;
    // End of variables declaration//GEN-END:variables

    public SavePack getSavePack() {
        return savePack;
    }

    public void setSavePack(SavePack savePack) {
        this.savePack = savePack;
    }

    @Override
    public ControolPack getControolPack() {
        return controolPack;
    }

    @Override
    public void setControolPack(ControolPack controolPack) {
        this.controolPack = controolPack;
    }

    @Override
    public ControllCommandSet getControllCommandSet() {
        return controllCommandSet;
    }

    @Override
    public void setControllCommandSet(ControllCommandSet controllCommandSet) {
        this.controllCommandSet = controllCommandSet;
    }

    @Override
    public boolean isNewsha() {
        return newsha;
    }

    @Override
    public void setNewsha(boolean newsha) {
        this.newsha = newsha;
    }

    void sendTime(int minute, int second, int sec24) {
        jSpinnerMinute.setValue(minute);
        jSpinnerSecond.setValue(second);
        jTextFieldSecond24.setText(String.valueOf(sec24));
        timeUpdate();
    }

//    void sendTime24(int second) {
//        jTextFieldSecond24.setText(String.valueOf(second));
//        timeUpdate();
//    }
    public int getFromMinute() {
        return Integer.parseInt(String.valueOf(jSpinnerMinute.getValue()));
    }

    public int getFromSecond() {
        return Integer.parseInt(String.valueOf(jSpinnerSecond.getValue()));
    }

    public int getFromSecond24() {
        return Integer.parseInt(String.valueOf(jTextFieldSecond24.getText()));
    }

    private void resetTimer() {
        stopmaiantimer();
        sendTime(10, 0, 24);
        // timeUpdate();
    }

    private void resetTimer24(int i) {
        timer.changetimertime24(i);
//        timer24.changetimertime(0, i);

    }

    void updatetime(int minute, int second, int sec24) {

        sendTime(minute, second, sec24);
//        if (minute == 3 & second == 0) {
//            timer.stop();
//        }

    }

//    void updatetime24(int second) {
//        sendTime24(second);
//    }
    void stopTime() {
        jButtonStartStop.setText("Start");
        jButtonStartStop.setForeground(Color.BLUE);
        if (timer != null) {
            if (timer.isAlive()) {
                timer.stop();
            }
        }
    }

    @Override
    public void updateControlpack() {
//        System.out.println("11");
        controolPack.setTime(String.format(String.valueOf(getFromMinute()) + ":%2d", getFromSecond()));
        controolPack.getGameData().setColorTop(basKetballPlay.getcolor1());
        controolPack.getGameData().setColorBot(basKetballPlay.getcolor2());
        controolPack.getGameData().setPointTop(basKetballPlay.getTeamTopPOint());
        controolPack.getGameData().setPointBot(basKetballPlay.getTeamBotPOint());
        controolPack.getGameData().setGpointsTop(basKetballPlay.getqUpointsTop());
        controolPack.getGameData().setGpointsBot(basKetballPlay.getqUpointsBot());
        controolPack.getGameData().setTeamTopName(basKetballPlay.getTeamTopName());
        controolPack.getGameData().setTeamBotName(basKetballPlay.getTeamBotName());
        controolPack.getGameData().setQuName(basKetballPlay.getquName());
        controolPack.getGameData().setFoulTop(basKetballPlay.getFoulTop());
        controolPack.getGameData().setFoulBot(basKetballPlay.getFoulBot());
        controolPack.setTimePack(gettimePack());
        if (controolPack.getErrorVis()) {
            controllCommandSet.errorShow(basKetballPlay.getFoulTop(), basKetballPlay.getFoulBot());
        } else {
            controllCommandSet.errorHide();
        }
//        System.out.println("22");
        saveControolPack();
//        timeUpdate();
        SendControolPack();

        controolPack.getGameData().setTeamaColor(basKetballPlay.getTeamColor());
        controolPack.setActionTeamColor(basKetballPlay.isActionTeamColor());
    }

    private TimePack gettimePack() {
        TimePack tp = new TimePack();
        tp.setMin(getFromMinute());
        tp.setSec(getFromSecond());
        tp.setSec24(getFromSecond24());
        return tp;
    }

    private void timeUpdate() {
        TimePack tp = gettimePack();
        if (newsha) {
            if (serverFree) {
                serverFree = false;
                server.writeSocket(new Pack(2, tp));
                serverFree = true;
            }
        }
        controolPack.setTimePack(tp);
    }

    private void updateFromDatabase() {
        newsha = false;

        newsha = true;

    }

    private void saveControolPack() {
        new FileManipulat().saveObject(lastontrolDataFile, controolPack);
    }

//    private void updateLastOndata() {
//        if (newsha) {
//            // lastOnAir.setKoshtiGirR((KoshtiGir) jComboBoxManRight.getSelectedItem());
//
//            new FileManipulat().saveObject(lastDataFile, lastOnAir);
//        }
//    }
//    private void updataLastOnairData(Database database) {
//        lastOnAir = new FileManipulat().loadlastONairdata(lastDataFile);
//        if (lastOnAir != null) {
//
////            jTextFieldKilooGram1.setText(lastOnAir.getwBigN());
//        } else {
////            jComboBoxCountryLeft.setSelectedIndex(0);
////            jComboBoxCountryRight.setSelectedIndex(0);
////            jComboBoxCountryLeft1.setSelectedIndex(0);
////            jComboBoxCountryRight1.setSelectedIndex(0);
//        }
//    }
    private void startStopTimer() {

        if (jButtonStartStop.getText().equals("Start")) {
            startMainTimer();

        } else {
            stopmaiantimer();
        }
    }

    private void stopmaiantimer() {
        if (jButtonStartStop.getText().equals("Stop")) {
            jButtonStartStop.setText("Start");
            jButtonStartStop.setForeground(Color.BLUE);
            jPaneltimerColor.setBackground(Color.gray);
            if (timer.isAlive()) {
                timer.stop();
            }
        }
        if (jButtonStartStop24.getText().equals("Start")) {

        } else {
            stop24sec();

        }
    }

    private void startMainTimer() {
        if (jButtonStartStop.getText().equals("Start")) {
            timer = new TimerTimer(this);

            timer.start();
            jButtonStartStop.setText("Stop");
            jButtonStartStop.setForeground(Color.red);
            jPaneltimerColor.setBackground(Color.red);
        }
        if (jButtonStartStop24.getText().equals("Start")) {
            start24sec();
        }
    }

    private void startStop24() {
        if (jButtonStartStop24.getText().equals("Start")) {
            start24sec();
        } else {
            stop24sec();
        }
    }

    private void start24sec() {
        if (timer != null) {
            timer.start24Sec();
            jButtonStartStop24.setText("Stop");
            jButtonStartStop24.setForeground(Color.red);
            jPanelTimer24Color.setBackground(Color.red);
        }
    }

    private void stop24sec() {
        jButtonStartStop24.setText("Start");
        jButtonStartStop24.setForeground(Color.BLUE);
        jPanelTimer24Color.setBackground(Color.gray);
        if (timer != null) {
            timer.stop24Sec();
        }
    }

    private void timerOnOff() {
        if (jToggleButtontimerOnOff.isSelected()) {
            jToggleButtontimerOnOff.setText("Timer Off");
            jPaneltimer.setVisible(true);
            jPanelNotimer.setVisible(false);
            controolPack.setTimeCoverVis(false);
        } else {
            jToggleButtontimerOnOff.setText("Timer ON");
            jPaneltimer.setVisible(false);
            jPanelNotimer.setVisible(true);
            controolPack.setTimeCoverVis(true);
        }

    }

    private void getTimerCoverPic() {
        JFileChooser chooser = new JFileChooser(new File("*.png"));
        File f = new File(basKetballPlay.basketControllData.getPath());
        chooser.setCurrentDirectory(f);
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            {
                basKetballPlay.basketControllData.setPath(chooser.getSelectedFile().getPath());
                controolPack.getGameData().setTimerCoverPic(chooser.getSelectedFile().getPath());
                updateControlpack();

            }
        }
    }

    private void updateFromControlPAck() {
        if (controolPack.getTimeCoverVis()) {
            jToggleButtontimerOnOff.setSelected(true);
            jToggleButtontimerOnOff.setText("Timer Off");
            jPaneltimer.setVisible(true);
            jPanelNotimer.setVisible(true);
        } else {
            jToggleButtontimerOnOff.setSelected(false);
            jToggleButtontimerOnOff.setText("Timer ON");
            jPaneltimer.setVisible(false);
            jPanelNotimer.setVisible(false);
        }

    }

}
