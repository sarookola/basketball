/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Controll;

import DataBox.SettingPack;
import base.DrawSettingDims;
import java.io.File;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JCheckBox;
import javax.swing.JFileChooser;
import javax.swing.JTabbedPane;

/**
 *
 * @author shayan
 */
public class DimsPanel extends javax.swing.JPanel {

    /**
     * Creates new form dims
     */
    ImagePanel imagePanel;
    List<DimPanel> dimPanel;
    SettingPack settingPack;
    SettingInterface setting;

    public DimsPanel() {
        initComponents();
        imagePanel = new ImagePanel();
        jPanelPic.add(imagePanel);
        dimPanel = new LinkedList<DimPanel>();
        dimPanel.add(new DimPanel(setting));
        jTabbedPaneDimStates.add(dimPanel.get(0), "state 1");
        jSpinnerAnimFrame.setVisible(false);
        jComboBoxDimsList.removeAllItems();

    }

    public DimsPanel(SettingPack settingPack, SettingInterface settingInterface) {
        initComponents();
        this.settingPack = settingPack;
        imagePanel = new ImagePanel();
        jPanelPic.add(imagePanel);
        dimPanel = new LinkedList<DimPanel>();
        dimPanel.add(new DimPanel(setting));
        jTabbedPaneDimStates.add(dimPanel.get(0), "state 1");
        jSpinnerAnimFrame.setVisible(false);
        this.setting = settingInterface;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTabbedPaneDimStates = new javax.swing.JTabbedPane();
        jPanel11 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jComboBoxDimsList = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        jButtonDimsAdd = new javax.swing.JButton();
        jButtonDimsLess = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        ImageVisible = new javax.swing.JCheckBox();
        TextVisible = new javax.swing.JCheckBox();
        jPanel13 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jCheckBoxAnimated = new javax.swing.JCheckBox();
        jSpinnerAnimFrame = new javax.swing.JSpinner();
        jPanel9 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jPanelPic = new javax.swing.JPanel();

        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new java.awt.BorderLayout());
        jPanel1.add(jTabbedPaneDimStates, java.awt.BorderLayout.CENTER);

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 0, 700, 270));

        jPanel11.setLayout(new java.awt.GridLayout(0, 1));

        jPanel5.setLayout(new java.awt.GridLayout(0, 1));

        jPanel6.setLayout(new java.awt.GridLayout(1, 0));

        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        jPanel3.setLayout(new java.awt.GridLayout(1, 0));

        jComboBoxDimsList.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxDimsList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxDimsListActionPerformed(evt);
            }
        });
        jPanel3.add(jComboBoxDimsList);

        jPanel2.add(jPanel3);

        jPanel4.setLayout(new java.awt.GridLayout(1, 0));

        jButtonDimsAdd.setText("+");
        jButtonDimsAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDimsAddActionPerformed(evt);
            }
        });
        jPanel4.add(jButtonDimsAdd);

        jButtonDimsLess.setText("-");
        jButtonDimsLess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDimsLessActionPerformed(evt);
            }
        });
        jPanel4.add(jButtonDimsLess);

        jPanel2.add(jPanel4);

        jPanel6.add(jPanel2);

        jPanel5.add(jPanel6);

        jPanel8.setLayout(new java.awt.GridLayout(1, 0));

        ImageVisible.setText("Image visible ");
        ImageVisible.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ImageVisibleActionPerformed(evt);
            }
        });
        jPanel8.add(ImageVisible);

        TextVisible.setText("Text visible");
        TextVisible.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextVisibleActionPerformed(evt);
            }
        });
        jPanel8.add(TextVisible);

        jPanel5.add(jPanel8);

        jPanel11.add(jPanel5);

        jPanel13.setLayout(new java.awt.GridLayout(0, 1));

        jPanel7.setLayout(new java.awt.GridLayout(1, 0));

        jTextField1.setText("name");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });
        jPanel7.add(jTextField1);

        jPanel13.add(jPanel7);

        jPanel10.setLayout(new java.awt.GridLayout(1, 0));

        jCheckBoxAnimated.setText("Animated");
        jCheckBoxAnimated.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBoxAnimatedStateChanged(evt);
            }
        });
        jCheckBoxAnimated.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAnimatedActionPerformed(evt);
            }
        });
        jPanel10.add(jCheckBoxAnimated);
        jPanel10.add(jSpinnerAnimFrame);

        jPanel13.add(jPanel10);

        jPanel9.setLayout(new java.awt.GridLayout(1, 0));

        jLabel2.setText("keyframe");
        jPanel9.add(jLabel2);

        jButton2.setText("+");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel9.add(jButton2);

        jButton3.setText("-");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel9.add(jButton3);

        jPanel13.add(jPanel9);

        jPanel11.add(jPanel13);

        jPanel12.setMinimumSize(new java.awt.Dimension(110, 110));
        jPanel12.setLayout(new java.awt.GridLayout(1, 0));

        jButton1.setText("Pics");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel12.add(jButton1);

        jPanelPic.setBackground(new java.awt.Color(0, 0, 0));
        jPanelPic.setMinimumSize(new java.awt.Dimension(50, 50));
        jPanelPic.setLayout(new java.awt.GridLayout(1, 0));
        jPanel12.add(jPanelPic);

        jPanel11.add(jPanel12);

        add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 210, 260));
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        // TODO add your handling code here:
        dimupdtae();
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        JFileChooser chooser = new JFileChooser(new File("."));
        File f = new File(settingPack.getPath());
        chooser.setCurrentDirectory(f);
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            imagePanel.drawImage(chooser.getSelectedFile());
            settingPack.setPath(chooser.getSelectedFile().getPath());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ImageVisibleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ImageVisibleActionPerformed
        // TODO add your handling code here:
        setting.dimupdateSetting();
    }//GEN-LAST:event_ImageVisibleActionPerformed

    private void TextVisibleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextVisibleActionPerformed
        // TODO add your handling code here:
        setting.dimupdateSetting();
    }//GEN-LAST:event_TextVisibleActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        int x = jTabbedPaneDimStates.getSelectedIndex();
//        System.out.println("dimpanel="+dimPanel.size());
        dimPanel.add(x + 1, new DimPanel(setting));

        dimPanel.get(x + 1).setNewsha(false);

        int y[] = dimPanel.get(x).getdims();
        dimPanel.get(x + 1).setdims(y);
        dimPanel.get(x + 1).setOpacity(dimPanel.get(x).getOpacity());
        dimPanel.get(x + 1).setColor(dimPanel.get(x).getColor1());
        dimPanel.get(x + 1).setStrokColor1(dimPanel.get(x).getStrokColor1());
        dimPanel.get(x + 1).setFrame(dimPanel.get(x).getFrame());
        jTabbedPaneDimStates.removeAll();
        for (int i = 0; i < dimPanel.size(); i++) {
            jTabbedPaneDimStates.add("State" + (i + 1), dimPanel.get(i));
        }
        jTabbedPaneDimStates.setSelectedIndex(x + 1);
        dimPanel.get(x + 1).setNewsha(true);
        setting.dimupdateSetting();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int x = jTabbedPaneDimStates.getSelectedIndex();
        jTabbedPaneDimStates.remove(x);
        dimPanel.remove(x);
        for (int i = x; i < dimPanel.size(); i++) {
            jTabbedPaneDimStates.setTitleAt(i, "State" + (i + 1));
        }
        setting.dimupdateSetting();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jCheckBoxAnimatedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxAnimatedActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBoxAnimatedActionPerformed

    private void jCheckBoxAnimatedStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBoxAnimatedStateChanged
        // TODO add your handling code here:
        if (jCheckBoxAnimated.isSelected()) {
            jSpinnerAnimFrame.setVisible(true);
        } else {
            jSpinnerAnimFrame.setVisible(false);
        }
//            jSpinnerAnimFrame.setValue(0);
    }//GEN-LAST:event_jCheckBoxAnimatedStateChanged

    private void jComboBoxDimsListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxDimsListActionPerformed
        // TODO add your handling code here:
        setting.dimScomboReSelect(jComboBoxDimsList.getSelectedIndex(), jTabbedPaneDimStates.getSelectedIndex());
    }//GEN-LAST:event_jComboBoxDimsListActionPerformed

    private void jButtonDimsAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDimsAddActionPerformed
        // TODO add your handling code here:
        int x = (jComboBoxDimsList.getSelectedIndex());
        setting.dimSadd(x, jTabbedPaneDimStates.getSelectedIndex());

        jComboBoxDimsList.setSelectedIndex(x + 1);
    }//GEN-LAST:event_jButtonDimsAddActionPerformed

    private void jButtonDimsLessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDimsLessActionPerformed
        // TODO add your handling code here:
        int x = jComboBoxDimsList.getSelectedIndex();
        setting.dimLess(x);

        jComboBoxDimsList.setSelectedIndex(x - 1);
    }//GEN-LAST:event_jButtonDimsLessActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ImageVisible;
    private javax.swing.JCheckBox TextVisible;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonDimsAdd;
    private javax.swing.JButton jButtonDimsLess;
    private javax.swing.JCheckBox jCheckBoxAnimated;
    private javax.swing.JComboBox jComboBoxDimsList;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPanelPic;
    private javax.swing.JSpinner jSpinnerAnimFrame;
    private javax.swing.JTabbedPane jTabbedPaneDimStates;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    public void setSettingPack(SettingPack settingPack) {
        this.settingPack = settingPack;
    }

    public boolean isImageVisible() {
        return ImageVisible.isSelected();
    }

    public void setImageVisible(boolean visible) {
        ImageVisible.setSelected(visible);
    }

    public boolean isTextVisible() {
        return TextVisible.isSelected();
    }

    public void setTextVisible(boolean visible) {
        TextVisible.setSelected(visible);
    }

    public String getTextField1() {
        return jTextField1.getText();
    }

    public void setTextField1(String st) {
        jTextField1.setText(st);
    }

    private void dimupdtae() {

    }

    public List<DimPanel> getDimPanel() {
        return dimPanel;
    }

    public int indexdimpanels() {
        return (jTabbedPaneDimStates.getSelectedIndex());
    }

    public void setDimPanel(int x) {
        jTabbedPaneDimStates.removeAll();
        this.dimPanel = new LinkedList<DimPanel>();
        for (int i = 0; i < x; i++) {
            dimPanel.add(new DimPanel(setting));
            jTabbedPaneDimStates.add(dimPanel.get(i), "state" + (i + 1));
        }
    }

    public void jTabbedPaneReset() {
        jTabbedPaneDimStates.removeAll();
        for (int i = 0; i < dimPanel.size(); i++) {
            jTabbedPaneDimStates.add(dimPanel.get(i), "state" + (i + 1));
        }
    }

    public void setTextVisible(JCheckBox TextVisible) {
        this.TextVisible = TextVisible;
    }

    public boolean isanimating() {
        return jCheckBoxAnimated.isSelected();
    }

    public void setAnimating(boolean bool) {
        jCheckBoxAnimated.setSelected(bool);
    }

    public int getAnimFrame() {
        if (jCheckBoxAnimated.isSelected()) {
            return Integer.parseInt(jSpinnerAnimFrame.getValue().toString());
        } else {
            return 0;
        }
    }

    public void setAnimFrame(int frame) {
        this.jSpinnerAnimFrame.setValue(frame);
    }

    public String getImage() {
        return imagePanel.getAddress();
    }

    public void setImage(String imagePanel) {
        this.imagePanel.setAddress(imagePanel);
    }

    void redrawImage() {
        imagePanel.redrawImage();
    }

    void setcombo(List<DrawSettingDims[]> drawingDimsList) {
        jComboBoxDimsList.removeAllItems();
        for (int i = 0; i < drawingDimsList.size(); i++) {
            jComboBoxDimsList.addItem(" " + i + " ");
        }
        jComboBoxDimsList.setSelectedIndex(0);
    }

    int getActiveDimState() {
        return jTabbedPaneDimStates.getSelectedIndex();
    }

}
